---
Description: Lambda that publishes shop events to SQS
Resources:
  Queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: shop-events
  ProducerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: shop-item-producer-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: shop-item-producer-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                Resource: !GetAtt Queue.Arn
  Producer:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: shop-item-producer
      Handler: index.handler
      Role: !GetAtt ProducerRole.Arn
      Runtime: nodejs16.x
      Code:
        ZipFile: |
          const AWS = require('aws-sdk');
          const sqs = new AWS.SQS();
          const queueUrl = process.env.QUEUE_URL;

          const items = [{
              name: "Cheese",
              price: 1.99,
          }, {
              name: "Bread",
              price: 2.99,
          }, {
              name: "Milk",
              price: 0.99,
          }, {
              name: "Water",
              price: 0.49,
          }, {
              name: "Coke",
              price: 50.00,
          }, {
              name: "Beer",
              price: 1.99,
          }, {
              name: "Wine",
              price: 10.00,
          }, {
              name: "Chocolate",
              price: 1.00,
          }, {
              name: "Chips",
              price: 1.00,
          }, {
              name: "Sweets",
              price: 1.00,
          }, {
              name: "Biscuits",
              price: 1.00,
          }, {
              name: "Crisps",
              price: 1.00,
          }, {
              name: "Cereal",
              price: 1.00,
          }, {
              name: "Pasta",
              price: 1.00,
          }, {
              name: "Rice",
              price: 1.00,
          }, {
              name: "Noodles",
              price: 1.00,
          }, {
              name: "Pizza",
              price: 1.00,
          }]

          exports.handler = async (event) => {
              const checkoutEvent = {
                  timestamp: new Date().toISOString(),
                  items: items
                      .map(a => [a, Math.random()])
                      .sort((a, b) => {
                          return a[1] < b[1] ? -1 : 1;
                      })
                      .slice(0, 5)
                      .map(a => a[0]),
              };
              const params = {
                  MessageBody: JSON.stringify(checkoutEvent),
                  QueueUrl: queueUrl,
              };
              console.log(`Checked out [${checkoutEvent.items.map(item => item.name)}] at ${checkoutEvent.timestamp}`)
              await sqs.sendMessage(params).promise();
          };
      Environment:
        Variables:
          QUEUE_URL: !Ref Queue
  Schedule:
    Type: AWS::Events::Rule
    Properties:
      Name: shop-item-producer-schedule
      Description: Schedule for shop item producer
      ScheduleExpression: rate(1 minute)
      Targets:
        - Arn: !GetAtt Producer.Arn
          Id: shop-item-producer-target
  SchedulePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt Producer.Arn
      Principal: events.amazonaws.com
      SourceArn: !GetAtt Schedule.Arn